# vim: filetype=sh
(alias sshconfig >/dev/null 2>&1) || alias sshconfig="v ~/.ssh/config && resrc"
alias sshexit="ssh -O exit"
alias sshmulti="ssh -M"
alias sshsingle="ssh -o ControlMaster=no"
alias sshx11="ssh -Y"
alias sshnocheck="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

# copy local env to remote host
ssh-cp-env() {
    scp -r ~/.profile ~/.bashrc ~/.bash_profile ~/.inputrc ~/.vimrc ~/.tmux.conf "$1":.
    ssh "$1" mkdir -p .config/
    for confdir in profile bash shell darwin linux freebsd vim htop ; do
        scp -r  ~/.config/$confdir "$1":.config/
    done
    unset confdir
}

# delete record from known_hosts
ssh-del-knownhost() {
    [ $# -eq 0 ] && { echo "nothing to delete from known_hosts"; return 1; }

    for h in "$@"; do
        echo "deleting '$h' from known_hosts"

        # Escape dots and build a safe pattern
        safe_h=$(printf '%s\n' "$h" | sed 's/[].[^$*\/]/\\&/g')
        pattern="^$safe_h[ ,]"

        if sed --version >/dev/null 2>&1; then
            # gnu
            sed -i "/$pattern/d" "$HOME/.ssh/known_hosts"
        else
            # bsd
            sed -i '' "/$pattern/d" "$HOME/.ssh/known_hosts"
        fi
    done
    unset h safe_h pattern
}

if _env_is_bash; then
    _env_bash_has_completion ssh || complete -fW \
        "$({ grep -siE '^(host|hostname)' ~/.ssh/config | cut -d' ' -f2; cut -d' ' -f1 ~/.ssh/known_hosts 2> /dev/null; } | grep -v '\*' | sed 's/[][]//g' | sort | uniq)" \
            ssh ssh-copy-id scp sftp sshexit sshmulti sshsingle sshx11 sshnocheck
    _env_bash_clone_completion ssh ssh-cp-env
    _env_bash_clone_completion ssh ssh-del-knownhost
fi

_env_is_zsh && {
    compdef _ssh_hosts ssh-del-knownhost
    compdef _ssh ssh-cp-env=ssh
}

