_env_cmd chezmoi || return

# chezmoi state
if [ -z "$TMUX" ] && chezmoi source-path >/dev/null 2>&1; then
    _verify=$(chezmoi verify --exclude=scripts >/dev/null 2>&1 || echo "drift (inspect with 'czstate') ")
    _uncommitted=$(chezmoi git status -- --porcelain 2>/dev/null | grep -q . && echo "uncommitted " || :)
    _unpushed=$(chezmoi git log -- --branches --not --remotes --oneline 2>/dev/null | grep -q . && echo "unpushed" || :)

    [ -n "${_verify}${_uncommitted}${_unpushed}" ] && \
      printf "\033[33mchezmoi: %s%s%s\033[0m\n" "$_verify" "$_uncommitted" "$_unpushed"
    unset _verify _uncommitted _unpushed
fi

alias cz="chezmoi "
alias czup="chezmoi update && resrc"
alias czap="chezmoi apply && resrc"
alias czstate="chezmoi status --exclude=scripts"

# these work only with git binary
_env_cmd git && chezmoi source-path >/dev/null 2>&1 && {
    alias czstate="chezmoi status --exclude=scripts; cz git -- status -s"
    alias cz-edit="chezmoi edit --apply"
    alias sshconfig="cz-edit ~/.ssh/config && resrc"
    alias cz-diff="chezmoi diff --exclude=scripts"

#    _czedit() {
#        if  [ "$#" -eq 1 ] && chezmoi source-path "$1" >/dev/null 2>&1; then
#            chezmoi edit --apply "$1"
#        else
#            vi "$@"
#        fi
#    }
#    alias v="_czedit"

    cz-add() {
        if [ "$#" -lt 1 ]; then
            echo "usage: cz-add <files>"
            return 1
        fi
        for f in "$@"; do
            if chezmoi source-path "$f" > /dev/null 2>&1; then
                echo "re-add file $f"
                chezmoi re-add "$f"
            else
                echo "add file $f"
                chezmoi add "$f"
            fi
        done
    }


    # chezmoi save all changes
    cz-save() {
        echo "Saving chezmoi changes to git..."
        echo

        chezmoi git -- diff --quiet 2>/dev/null || \
            chezmoi git add .

        chezmoi git -- diff --cached --quiet 2>/dev/null || {
            echo "Changes:"
            chezmoi git -- status -s
            sleep 2.5
            echo
            chezmoi git -- commit -m "${*:-$(chezmoi git -- status -s)}" -m "$(hostname -s)"
        }

        chezmoi git -- pull --rebase && chezmoi git push

        echo
        echo "Chezmoi saved to git"
    }
}

# remote local install chezmoi
cz-ssh() {
    ssh "$@" 'sh <(curl -fsLS get.chezmoi.io/lb || wget -qO- get.chezmoi.io/lb) -- init --force --apply freepaddler'
}

if _env_is_bash; then
    . <(chezmoi completion bash --)
    _env_bash_clone_completion ssh cz-ssh
fi
