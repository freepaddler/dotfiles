# mouse support
set -g mouse on

# Increase scrollback buffer size from 2000 to 50000 lines
set -g history-limit 50000

# Increase tmux messages display duration from 750ms to 4s
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often, from every 15s to 5s
set -g status-interval 5

# Upgrade $TERM
set -g default-terminal "screen-256color"

# Emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# 0 is too far ;)
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Automatically set window title
setw -g automatic-rename on
set -g set-titles on

## Key Bindings
set -g prefix2 ยง
bind ยง send-key ยง
# No delay for escape key press
set -sg escape-time 0
set -g repeat-time 1000

# detach with code to stay in terminal
bind e detach -E false

bind k confirm-before -p "kill-window #W? (y/n)" kill-window
bind K confirm-before -p "kill-session #S? (y/n)" kill-session

bind W command-prompt -I "#{window_name}" "rename-window '%%'"

# escape in entrance tree-mode exits killing session
bind -T root Escape if -F "#{&&:#{==:#{pane_mode},tree-mode},#{?@t,1,0}}" { if -F "#{==:#{@t},1}" { run 'tmux detach -E false; tmux kill-session -t "#S"'} { run 'tmux detach -E false' }  } { send Escape }

# Reload tmux config (message only on manual call)
bind r run-shell "tmux source-file ~/.tmux.conf\; tmux display-message 'config reloaded'"
bind R refresh-client

# vertical and horisontal split (- | joins with shift)
bind \\ split-window -h
bind |  join-pane -h
bind -  split-window -v
bind _  join-pane -v

# Use Meta-Shift-arrows to switch panes
# (resize with prefix)
bind -n M-Left  select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up    select-pane -U
bind -n M-Down  select-pane -D
bind -r M-Left  resize-pane -L
bind -r M-Right resize-pane -R
bind -r M-Up    resize-pane -U
bind -r M-Down  resize-pane -D

# switch windows
bind -n M-< previous-window
bind -n M-> next-window

# Copy-Paste
# Prefix v to enter copy mode
# Prefix V to paste
bind v copy-mode
bind V paste
# Do not jump out of copy mode on mouse selection
unbind -T copy-mode-vi MouseDragEnd1Pane 
# Enter to copy selection and send it to OS clipboard
bind -T copy-mode-vi Enter send -X copy-selection-and-cancel
bind -T copy-mode-vi y send -X copy-selection
if-shell '[ "$(uname -s)" = "Darwin" ] && which pbcopy' { 
    bind -T copy-mode-vi Enter send -X copy-selection-and-cancel \; run "tmux save-buffer - | pbcopy || :"
    bind -T copy-mode-vi y send -X copy-selection \; run "tmux save-buffer - | pbcopy || :"
}
    bind-key -T copy-mode-vi DoubleClick1Pane  select-pane \; send-keys -X select-word \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel "pbcopy"
    bind-key -T copy-mode TripleClick1Pane  select-pane \; send-keys -X select-line \; run-shell -d 0.3 \; send-keys -X copy-pipe-and-cancel "pbcopy"
    bind-key -T root DoubleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-word ; run-shell -d 0.3 ; send-keys -X copy-pipe-and-cancel "pbcopy"}
    bind-key -T root TripleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" { send-keys -M } { copy-mode -H ; send-keys -X select-line ; run-shell -d 0.3 ; send-keys -X copy-pipe-and-cancel "pbcopy"}


# Escape not to cancel selection, but also exit mode
bind -T copy-mode-vi Escape if-shell -F "#{selection_active}" { send -X clear-selection}  { send -X cancel }
bind -T copy-mode-vi S-Left send -X previous-word
bind -T copy-mode-vi S-Right send -X next-word-end


# THEME
set -g pane-active-border-style fg=colour238,bg=colour234
set -g pane-border-style fg=colour238
# status line
set -g status-bg colour233
set -g status-fg cyan
set -g window-status-current-style fg=white,bold
set -g status-left-length 14
set -g status-left '#{?#{e|>:#{session_attached},1},#[fg=black]#[bg=yellow] #{session_attached} #[bg=colour233],}#[fg=magenta]#{?client_prefix,#[reverse] (#S) #[fg=cyan] #P #[noreverse], (#S) #[fg=cyan] #P  }'
set -g status-justify centre
set -g status-right '#{selection_present} #[fg=yellow]#H #[bg=red,fg=white,bold]#(echo ${SSH_CONNECTION:+"  SSH  "})'

# IPAD keyboard
set -g prefix C-q
bind C-q send-prefix
# vertical and horisontal split (ctrl+h/v joins with shift)
bind C-v    split-window -h
bind C-S-v  join-pane -h
bind C-h    split-window -v
bind C-S-h  join-pane -v
